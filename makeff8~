##
# sample MakeFile for my MySQL Demo program.
# emulate and optimize the compiler command:
# g++ -L/usr/lib -lmysqlclient -lmysqlpp MySQLdemo.cpp /home/myoder/Source/mysqlutil.o -o mysqldemo1
# or always compile the UTIL code:
# g++ -L/usr/lib -lmysqlclient -lmysqlpp MySQLdemo.cpp /home/myoder/Research/mysql++dev-examples/util.cpp -o mysqldemo1
#
# since don't use a default MAKE filename, execute via:
# make -f makeGridCascade2
###
# set variables:
#
CXX=g++ -Wall
INCLUDES=-I/usr/include/mysql -I/usr/include/mysql++ -I/home/myoder/Documents/Source -I/home/myoder/Documents/gnuplot_i++ -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -I. -I/home/myoder/Documents/Source -I/home/myoder/Documents/gnuplot_i++
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
#
#LDFLAGS=-L/usr/libs
LIBS=$(SUBLIBS) -L/usr/libs -lmysqlclient -lmysqlpp -lQtGui -lQtCore -lpthread  
#LIBS=-static -L/usr/libs
#LIBS=-L/usr/libs  
CXXFLAGS=$(INCLUDES) 

# OBJS = MySQLdemo.o mysqlutil.o

# simple:
# gnuplot_i.o:	gnuplot_i.cc gnuplot_i.hpp

#ygnp.o:	gnuplot_i.cc gnuplot_i.hpp
#	$(CXX) gnuplot_i.hpp gnuplot_i.cc -c -o ygnp.o $(LIBS) $(INCLUDES)

#glebsutils.o: glebsutils.cpp glebsutils.h
#	$(CXX) /home/myoder/Source/glebsutils.cpp -c -o glebsutils.o


ffire8: ForestFire8.cpp glebsutils.o ffirebits.h ffGridDisplay.o
	$(CXX) ForestFire8.cpp glebsutils.o gnuplot_i.cc ffGridDisplay.o -o$@ $(LIBS) $(INCLUDES)

yutils.o: yutils.cpp yutils.h
	$(CXX) $(FLAGS) -c yutils.cpp

glebsutils.o: glebsutils.cpp glebsutils.h
	$(CXX) $(FLAGS) -c glebsutils.cpp

ffGridDisplay.o: ffGridDisplay.cpp ffGridDisplay.h
	$(CXX) $(FLAGS) $(CXXFLAGS) $(LIBS) -c ffGridDisplay.cpp


#ffirebits.o: ffirebits.cpp glebsutils.o ffirebits.h
#	$(CXX) $(FLAGS) $(LIBS) $(INCLUDES) -c ffirebits.cpp glebsutils.o gnuplot_i.cc


