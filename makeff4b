##
# sample MakeFile for my MySQL Demo program.
# emulate and optimize the compiler command:
# g++ -L/usr/lib -lmysqlclient -lmysqlpp MySQLdemo.cpp /home/myoder/Source/mysqlutil.o -o mysqldemo1
# or always compile the UTIL code:
# g++ -L/usr/lib -lmysqlclient -lmysqlpp MySQLdemo.cpp /home/myoder/Research/mysql++dev-examples/util.cpp -o mysqldemo1
#
# since don't use a default MAKE filename, execute via:
# make -f makeGridCascade2
###
# set variables:
#
CXX=g++ -Wall
INCLUDES=-I/usr/include/mysql -I/usr/include/mysql++ -I/home/myoder/Documents/Source -I/home/myoder/Documents/gnuplot_i++
#LDFLAGS=-L/usr/libs
LIBS=-L/usr/libs -lmysqlclient -lmysqlpp
CXXFLAGS=$(INCLUDES) 

# OBJS = MySQLdemo.o mysqlutil.o

# simple:
# gnuplot_i.o:	gnuplot_i.cc gnuplot_i.hpp

#ygnp.o:	gnuplot_i.cc gnuplot_i.hpp
#	$(CXX) gnuplot_i.hpp gnuplot_i.cc -c -o ygnp.o $(LIBS) $(INCLUDES)

#glebsutils.o: glebsutils.cpp glebsutils.h
#	$(CXX) /home/myoder/Source/glebsutils.cpp -c -o glebsutils.o

#glebsutils.o: glebsutils.cpp glebsutils.h
#	$(CXX) $(FLAGS) -c glebsutils.cpp

# why does it stop after this object?
#yutils.o: yutils.cpp yutils.h
#	$(CXX) $(FLAGS) -c yutils.cpp

#
ffire4b: ForestFire4.cpp yutils.o
	$(CXX) ForestFire4.cpp gnuplot_i.cc -o$@ $(LIBS) $(INCLUDES)

#	$(CXX) ForestFire4.cpp gnuplot_i.cc glebsutils.o -o$@ $(LIBS) $(INCLUDES)
